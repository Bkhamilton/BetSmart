/**
 * Prop Odds API
 *  The Prop Odds API allows you to query player and game prop odds from different bookies. 
 *
 * The version of the OpenAPI document: 0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PropOddsApi);
  }
}(this, function(expect, PropOddsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PropOddsApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('bETAGetFantasyLinesBetaFantasyLinesGameIdMarketGet', function() {
      it('should call bETAGetFantasyLinesBetaFantasyLinesGameIdMarketGet successfully', function(done) {
        //uncomment below and update the code to test bETAGetFantasyLinesBetaFantasyLinesGameIdMarketGet
        //instance.bETAGetFantasyLinesBetaFantasyLinesGameIdMarketGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bETAGetGameBetaGameGameIdGet', function() {
      it('should call bETAGetGameBetaGameGameIdGet successfully', function(done) {
        //uncomment below and update the code to test bETAGetGameBetaGameGameIdGet
        //instance.bETAGetGameBetaGameGameIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bETAGetGamesBetaGamesLeagueGet', function() {
      it('should call bETAGetGamesBetaGamesLeagueGet successfully', function(done) {
        //uncomment below and update the code to test bETAGetGamesBetaGamesLeagueGet
        //instance.bETAGetGamesBetaGamesLeagueGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bETAGetMarketsBetaMarketsGameIdGet', function() {
      it('should call bETAGetMarketsBetaMarketsGameIdGet successfully', function(done) {
        //uncomment below and update the code to test bETAGetMarketsBetaMarketsGameIdGet
        //instance.bETAGetMarketsBetaMarketsGameIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bETAGetOddsBetaOddsGameIdMarketGet', function() {
      it('should call bETAGetOddsBetaOddsGameIdMarketGet successfully', function(done) {
        //uncomment below and update the code to test bETAGetOddsBetaOddsGameIdMarketGet
        //instance.bETAGetOddsBetaOddsGameIdMarketGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bETAGetPlayerBetaParticipantParticipantIdGet', function() {
      it('should call bETAGetPlayerBetaParticipantParticipantIdGet successfully', function(done) {
        //uncomment below and update the code to test bETAGetPlayerBetaParticipantParticipantIdGet
        //instance.bETAGetPlayerBetaParticipantParticipantIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bETAGetUsageBetaUsageGet', function() {
      it('should call bETAGetUsageBetaUsageGet successfully', function(done) {
        //uncomment below and update the code to test bETAGetUsageBetaUsageGet
        //instance.bETAGetUsageBetaUsageGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bETALookupPlayerBetaParticipantLookupGet', function() {
      it('should call bETALookupPlayerBetaParticipantLookupGet successfully', function(done) {
        //uncomment below and update the code to test bETALookupPlayerBetaParticipantLookupGet
        //instance.bETALookupPlayerBetaParticipantLookupGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetFantasyLinesV1FantasyLinesGameIdMarketGet', function() {
      it('should call v1GetFantasyLinesV1FantasyLinesGameIdMarketGet successfully', function(done) {
        //uncomment below and update the code to test v1GetFantasyLinesV1FantasyLinesGameIdMarketGet
        //instance.v1GetFantasyLinesV1FantasyLinesGameIdMarketGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetFantasySnapshotV1FantasySnapshotLeagueMarketGet', function() {
      it('should call v1GetFantasySnapshotV1FantasySnapshotLeagueMarketGet successfully', function(done) {
        //uncomment below and update the code to test v1GetFantasySnapshotV1FantasySnapshotLeagueMarketGet
        //instance.v1GetFantasySnapshotV1FantasySnapshotLeagueMarketGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetLeagueFantasySnapshotV1FantasySnapshotLeagueGet', function() {
      it('should call v1GetLeagueFantasySnapshotV1FantasySnapshotLeagueGet successfully', function(done) {
        //uncomment below and update the code to test v1GetLeagueFantasySnapshotV1FantasySnapshotLeagueGet
        //instance.v1GetLeagueFantasySnapshotV1FantasySnapshotLeagueGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetOddsV1OddsGameIdMarketGet', function() {
      it('should call v1GetOddsV1OddsGameIdMarketGet successfully', function(done) {
        //uncomment below and update the code to test v1GetOddsV1OddsGameIdMarketGet
        //instance.v1GetOddsV1OddsGameIdMarketGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
