/**
 * Prop Odds API
 *  The Prop Odds API allows you to query player and game prop odds from different bookies. 
 *
 * The version of the OpenAPI document: 0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Game from './Game';

/**
 * The GamesInfo model module.
 * @module model/GamesInfo
 * @version 0.9
 */
class GamesInfo {
    /**
     * Constructs a new <code>GamesInfo</code>.
     * @alias module:model/GamesInfo
     * @param league {String} 
     * @param date {String} 
     * @param games {Array.<module:model/Game>} 
     */
    constructor(league, date, games) { 
        
        GamesInfo.initialize(this, league, date, games);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, league, date, games) { 
        obj['league'] = league;
        obj['date'] = date;
        obj['games'] = games;
    }

    /**
     * Constructs a <code>GamesInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GamesInfo} obj Optional instance to populate.
     * @return {module:model/GamesInfo} The populated <code>GamesInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GamesInfo();

            if (data.hasOwnProperty('league')) {
                obj['league'] = ApiClient.convertToType(data['league'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('games')) {
                obj['games'] = ApiClient.convertToType(data['games'], [Game]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GamesInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GamesInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GamesInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['league'] && !(typeof data['league'] === 'string' || data['league'] instanceof String)) {
            throw new Error("Expected the field `league` to be a primitive type in the JSON string but got " + data['league']);
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        if (data['games']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['games'])) {
                throw new Error("Expected the field `games` to be an array in the JSON data but got " + data['games']);
            }
            // validate the optional field `games` (array)
            for (const item of data['games']) {
                Game.validateJSON(item);
            };
        }

        return true;
    }


}

GamesInfo.RequiredProperties = ["league", "date", "games"];

/**
 * @member {String} league
 */
GamesInfo.prototype['league'] = undefined;

/**
 * @member {String} date
 */
GamesInfo.prototype['date'] = undefined;

/**
 * @member {Array.<module:model/Game>} games
 */
GamesInfo.prototype['games'] = undefined;






export default GamesInfo;

