/**
 * Prop Odds API
 *  The Prop Odds API allows you to query player and game prop odds from different bookies. 
 *
 * The version of the OpenAPI document: 0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Line from './Line';

/**
 * The FantasyBookMarket model module.
 * @module model/FantasyBookMarket
 * @version 0.9
 */
class FantasyBookMarket {
    /**
     * Constructs a new <code>FantasyBookMarket</code>.
     * @alias module:model/FantasyBookMarket
     * @param marketKey {String} 
     * @param lines {Array.<module:model/Line>} 
     */
    constructor(marketKey, lines) { 
        
        FantasyBookMarket.initialize(this, marketKey, lines);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, marketKey, lines) { 
        obj['market_key'] = marketKey;
        obj['lines'] = lines;
    }

    /**
     * Constructs a <code>FantasyBookMarket</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FantasyBookMarket} obj Optional instance to populate.
     * @return {module:model/FantasyBookMarket} The populated <code>FantasyBookMarket</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FantasyBookMarket();

            if (data.hasOwnProperty('market_key')) {
                obj['market_key'] = ApiClient.convertToType(data['market_key'], 'String');
            }
            if (data.hasOwnProperty('lines')) {
                obj['lines'] = ApiClient.convertToType(data['lines'], [Line]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FantasyBookMarket</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FantasyBookMarket</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FantasyBookMarket.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['market_key'] && !(typeof data['market_key'] === 'string' || data['market_key'] instanceof String)) {
            throw new Error("Expected the field `market_key` to be a primitive type in the JSON string but got " + data['market_key']);
        }
        if (data['lines']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['lines'])) {
                throw new Error("Expected the field `lines` to be an array in the JSON data but got " + data['lines']);
            }
            // validate the optional field `lines` (array)
            for (const item of data['lines']) {
                Line.validateJSON(item);
            };
        }

        return true;
    }


}

FantasyBookMarket.RequiredProperties = ["market_key", "lines"];

/**
 * @member {String} market_key
 */
FantasyBookMarket.prototype['market_key'] = undefined;

/**
 * @member {Array.<module:model/Line>} lines
 */
FantasyBookMarket.prototype['lines'] = undefined;






export default FantasyBookMarket;

