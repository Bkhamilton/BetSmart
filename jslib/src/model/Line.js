/**
 * Prop Odds API
 *  The Prop Odds API allows you to query player and game prop odds from different bookies. 
 *
 * The version of the OpenAPI document: 0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Line model module.
 * @module model/Line
 * @version 0.9
 */
class Line {
    /**
     * Constructs a new <code>Line</code>.
     * @alias module:model/Line
     * @param timestamp {String} 
     * @param gameId {String} 
     * @param line {Number} 
     * @param participant {Number} 
     * @param participantName {String} 
     */
    constructor(timestamp, gameId, line, participant, participantName) { 
        
        Line.initialize(this, timestamp, gameId, line, participant, participantName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timestamp, gameId, line, participant, participantName) { 
        obj['timestamp'] = timestamp;
        obj['game_id'] = gameId;
        obj['line'] = line;
        obj['participant'] = participant;
        obj['participant_name'] = participantName;
    }

    /**
     * Constructs a <code>Line</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Line} obj Optional instance to populate.
     * @return {module:model/Line} The populated <code>Line</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Line();

            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'String');
            }
            if (data.hasOwnProperty('game_id')) {
                obj['game_id'] = ApiClient.convertToType(data['game_id'], 'String');
            }
            if (data.hasOwnProperty('line')) {
                obj['line'] = ApiClient.convertToType(data['line'], 'Number');
            }
            if (data.hasOwnProperty('participant')) {
                obj['participant'] = ApiClient.convertToType(data['participant'], 'Number');
            }
            if (data.hasOwnProperty('participant_name')) {
                obj['participant_name'] = ApiClient.convertToType(data['participant_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Line</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Line</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Line.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['timestamp'] && !(typeof data['timestamp'] === 'string' || data['timestamp'] instanceof String)) {
            throw new Error("Expected the field `timestamp` to be a primitive type in the JSON string but got " + data['timestamp']);
        }
        // ensure the json data is a string
        if (data['game_id'] && !(typeof data['game_id'] === 'string' || data['game_id'] instanceof String)) {
            throw new Error("Expected the field `game_id` to be a primitive type in the JSON string but got " + data['game_id']);
        }
        // ensure the json data is a string
        if (data['participant_name'] && !(typeof data['participant_name'] === 'string' || data['participant_name'] instanceof String)) {
            throw new Error("Expected the field `participant_name` to be a primitive type in the JSON string but got " + data['participant_name']);
        }

        return true;
    }


}

Line.RequiredProperties = ["timestamp", "game_id", "line", "participant", "participant_name"];

/**
 * @member {String} timestamp
 */
Line.prototype['timestamp'] = undefined;

/**
 * @member {String} game_id
 */
Line.prototype['game_id'] = undefined;

/**
 * @member {Number} line
 */
Line.prototype['line'] = undefined;

/**
 * @member {Number} participant
 */
Line.prototype['participant'] = undefined;

/**
 * @member {String} participant_name
 */
Line.prototype['participant_name'] = undefined;






export default Line;

