/**
 * Prop Odds API
 *  The Prop Odds API allows you to query player and game prop odds from different bookies. 
 *
 * The version of the OpenAPI document: 0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FantasyBookMultiMarket from './FantasyBookMultiMarket';

/**
 * The FantasyLeagueSnapshot model module.
 * @module model/FantasyLeagueSnapshot
 * @version 0.9
 */
class FantasyLeagueSnapshot {
    /**
     * Constructs a new <code>FantasyLeagueSnapshot</code>.
     * @alias module:model/FantasyLeagueSnapshot
     * @param league {String} 
     * @param fantasyBooks {Array.<module:model/FantasyBookMultiMarket>} 
     */
    constructor(league, fantasyBooks) { 
        
        FantasyLeagueSnapshot.initialize(this, league, fantasyBooks);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, league, fantasyBooks) { 
        obj['league'] = league;
        obj['fantasy_books'] = fantasyBooks;
    }

    /**
     * Constructs a <code>FantasyLeagueSnapshot</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FantasyLeagueSnapshot} obj Optional instance to populate.
     * @return {module:model/FantasyLeagueSnapshot} The populated <code>FantasyLeagueSnapshot</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FantasyLeagueSnapshot();

            if (data.hasOwnProperty('league')) {
                obj['league'] = ApiClient.convertToType(data['league'], 'String');
            }
            if (data.hasOwnProperty('fantasy_books')) {
                obj['fantasy_books'] = ApiClient.convertToType(data['fantasy_books'], [FantasyBookMultiMarket]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FantasyLeagueSnapshot</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FantasyLeagueSnapshot</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FantasyLeagueSnapshot.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['league'] && !(typeof data['league'] === 'string' || data['league'] instanceof String)) {
            throw new Error("Expected the field `league` to be a primitive type in the JSON string but got " + data['league']);
        }
        if (data['fantasy_books']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fantasy_books'])) {
                throw new Error("Expected the field `fantasy_books` to be an array in the JSON data but got " + data['fantasy_books']);
            }
            // validate the optional field `fantasy_books` (array)
            for (const item of data['fantasy_books']) {
                FantasyBookMultiMarket.validateJSON(item);
            };
        }

        return true;
    }


}

FantasyLeagueSnapshot.RequiredProperties = ["league", "fantasy_books"];

/**
 * @member {String} league
 */
FantasyLeagueSnapshot.prototype['league'] = undefined;

/**
 * @member {Array.<module:model/FantasyBookMultiMarket>} fantasy_books
 */
FantasyLeagueSnapshot.prototype['fantasy_books'] = undefined;






export default FantasyLeagueSnapshot;

