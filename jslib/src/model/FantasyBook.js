/**
 * Prop Odds API
 *  The Prop Odds API allows you to query player and game prop odds from different bookies. 
 *
 * The version of the OpenAPI document: 0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FantasyBookMarket from './FantasyBookMarket';

/**
 * The FantasyBook model module.
 * @module model/FantasyBook
 * @version 0.9
 */
class FantasyBook {
    /**
     * Constructs a new <code>FantasyBook</code>.
     * @alias module:model/FantasyBook
     * @param bookieKey {String} 
     * @param market {module:model/FantasyBookMarket} 
     */
    constructor(bookieKey, market) { 
        
        FantasyBook.initialize(this, bookieKey, market);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bookieKey, market) { 
        obj['bookie_key'] = bookieKey;
        obj['market'] = market;
    }

    /**
     * Constructs a <code>FantasyBook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FantasyBook} obj Optional instance to populate.
     * @return {module:model/FantasyBook} The populated <code>FantasyBook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FantasyBook();

            if (data.hasOwnProperty('bookie_key')) {
                obj['bookie_key'] = ApiClient.convertToType(data['bookie_key'], 'String');
            }
            if (data.hasOwnProperty('market')) {
                obj['market'] = FantasyBookMarket.constructFromObject(data['market']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FantasyBook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FantasyBook</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FantasyBook.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['bookie_key'] && !(typeof data['bookie_key'] === 'string' || data['bookie_key'] instanceof String)) {
            throw new Error("Expected the field `bookie_key` to be a primitive type in the JSON string but got " + data['bookie_key']);
        }
        // validate the optional field `market`
        if (data['market']) { // data not null
          FantasyBookMarket.validateJSON(data['market']);
        }

        return true;
    }


}

FantasyBook.RequiredProperties = ["bookie_key", "market"];

/**
 * @member {String} bookie_key
 */
FantasyBook.prototype['bookie_key'] = undefined;

/**
 * @member {module:model/FantasyBookMarket} market
 */
FantasyBook.prototype['market'] = undefined;






export default FantasyBook;

